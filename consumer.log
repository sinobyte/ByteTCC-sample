2021-09-19 19:12:04,394 INFO  [main] - [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@757acd7b: startup date [Sun Sep 19 19:12:04 CST 2021]; root of context hierarchy
2021-09-19 19:12:04,629 INFO  [background-preinit] - [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 5.3.6.Final
2021-09-19 19:12:04,763 INFO  [main] - [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2021-09-19 19:12:04,893 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9ae286e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:06,576 INFO  [main] - [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] - Fetching config from server at: http://localhost:8888
2021-09-19 19:12:08,867 WARN  [main] - [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/springcloud-sample-consumer/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2021-09-19 19:12:08,872 INFO  [main] - [com.bytesvc.consumer.main.SampleConsumerMain] - No active profile set, falling back to default profiles: default
2021-09-19 19:12:09,051 INFO  [main] - [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@163d04ff: startup date [Sun Sep 19 19:12:09 CST 2021]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@757acd7b
2021-09-19 19:12:11,739 INFO  [main] - [org.springframework.beans.factory.xml.XmlBeanDefinitionReader] - Loading XML bean definitions from class path resource [bytetcc-supports-springcloud.xml]
2021-09-19 19:12:12,085 INFO  [main] - [org.springframework.beans.factory.xml.XmlBeanDefinitionReader] - Loading XML bean definitions from class path resource [bytetcc-disable-tx-advice.xml]
2021-09-19 19:12:12,109 INFO  [main] - [org.springframework.beans.factory.xml.XmlBeanDefinitionReader] - Loading XML bean definitions from class path resource [bytetcc-supports-springcloud-core.xml]
2021-09-19 19:12:12,136 INFO  [main] - [org.springframework.beans.factory.xml.XmlBeanDefinitionReader] - Loading XML bean definitions from class path resource [bytetcc-supports-jta.xml]
2021-09-19 19:12:12,187 INFO  [main] - [org.springframework.beans.factory.xml.XmlBeanDefinitionReader] - Loading XML bean definitions from class path resource [bytetcc-supports-tcc.xml]
2021-09-19 19:12:12,205 INFO  [main] - [org.springframework.beans.factory.xml.XmlBeanDefinitionReader] - Loading XML bean definitions from class path resource [bytetcc-supports-task.xml]
2021-09-19 19:12:12,328 INFO  [main] - [org.springframework.beans.factory.xml.XmlBeanDefinitionReader] - Loading XML bean definitions from class path resource [spring-mybatis.xml]
2021-09-19 19:12:13,197 INFO  [main] - [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionAdvisor' with a different definition: replacing [Root bean: class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionAdvisor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]]
2021-09-19 19:12:13,198 INFO  [main] - [org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader] - Skipping bean definition for [BeanMethod:name=transactionalEventListenerFactory,declaringClass=org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration]: a definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' already exists. This top-level bean definition is considered as an override.
2021-09-19 19:12:13,811 INFO  [main] - [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=baf75fab-02a8-3ac6-819f-6bc3b5dcc762
2021-09-19 19:12:15,419 INFO  [main] - [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2021-09-19 19:12:15,511 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'com.bytesvc.feign.service.IAccountService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:15,553 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'consumerConfig' of type [com.bytesvc.consumer.config.ConsumerConfig$$EnhancerBySpringCGLIB$$2552d6c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:15,611 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'compensableMethodInterceptor' of type [org.bytesoft.bytetcc.supports.spring.CompensableMethodInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:16,799 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytejtaXidFactory' of type [org.bytesoft.bytejta.xa.XidFactoryImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:16,811 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytejtaTransactionLogger' of type [org.bytesoft.bytetcc.logging.SampleTransactionLogger] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:16,817 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytejtaTransactionRepository' of type [org.bytesoft.bytejta.TransactionRepositoryImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:16,829 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytejtaTransactionInterceptor' of type [org.bytesoft.bytejta.supports.rpc.TransactionInterceptorImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:16,843 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytejtaTransactionRecovery' of type [org.bytesoft.bytejta.TransactionRecoveryImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:16,860 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytejtaTransactionCoordinator' of type [org.bytesoft.bytejta.TransactionCoordinator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:16,865 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytejtaTransactionLock' of type [org.bytesoft.bytejta.VacantTransactionLock] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:16,865 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytejtaBeanFactory' of type [org.bytesoft.bytejta.TransactionBeanFactoryImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:16,865 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytejtaTransactionManager' of type [org.bytesoft.bytejta.TransactionManagerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:16,882 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytetccCompensableManager' of type [org.bytesoft.bytetcc.CompensableManagerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:16,891 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytetccXidFactory' of type [org.bytesoft.bytetcc.xa.XidFactoryImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:16,892 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytetccTransactionRepository' of type [org.bytesoft.bytejta.TransactionRepositoryImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:16,908 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytetccTransactionRecovery' of type [org.bytesoft.bytetcc.TransactionRecoveryImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:16,918 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytetccCompensableCoordinator' of type [org.bytesoft.bytetcc.CompensableCoordinator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:16,925 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'springContainerContext' of type [org.bytesoft.bytetcc.supports.spring.SpringContainerContextImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:16,941 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytetccCompensableInterceptor' of type [org.bytesoft.bytetcc.supports.rpc.CompensableInterceptorImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:16,942 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytetccTransactionInterceptor' of type [org.bytesoft.bytetcc.supports.springcloud.CompensableInterceptorImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:16,971 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytetccCompensableLogger' of type [org.bytesoft.bytetcc.logging.SampleCompensableLogger] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:16,985 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytetccCompensableArchiveDeserializer' of type [org.bytesoft.bytetcc.logging.deserializer.CompensableArchiveDeserializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:17,006 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'commonResourceDeserializer' of type [org.bytesoft.bytejta.supports.resource.serialize.XAResourceDeserializerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:17,006 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytetccResourceDeserializer' of type [org.bytesoft.bytetcc.supports.springcloud.serialize.XAResourceDeserializerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:17,007 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytetccXAResourceArchiveDeserializer' of type [org.bytesoft.bytetcc.logging.deserializer.XAResourceArchiveDeserializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:17,016 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytetccTransactionArchiveDeserializer' of type [org.bytesoft.bytetcc.logging.deserializer.TransactionArchiveDeserializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:17,016 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytetccArchiveDeserializer' of type [org.bytesoft.bytetcc.logging.ArchiveDeserializerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:17,025 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytetccCleanupWork' of type [org.bytesoft.bytetcc.work.CleanupWork] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:17,033 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytetccCompensableContext' of type [org.bytesoft.bytetcc.CompensableContextImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:17,033 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'bytetccBeanFactory' of type [org.bytesoft.bytetcc.TransactionBeanFactoryImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:17,034 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'transactionManager' of type [org.bytesoft.bytetcc.TransactionManagerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:17,034 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'mybatisDataSource' of type [org.bytesoft.bytejta.supports.jdbc.LocalXADataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:17,222 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'sessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:17,222 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'sessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:17,226 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'transferDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:17,304 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:17,370 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7ec883ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:17,656 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$b0f52a2d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:17,669 INFO  [main] - [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9ae286e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-19 19:12:18,229 INFO  [main] - [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] - Tomcat initialized with port(s): 7080 (http)
2021-09-19 19:12:18,243 INFO  [main] - [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2021-09-19 19:12:18,245 INFO  [main] - [org.apache.catalina.core.StandardEngine] - Starting Servlet Engine: Apache Tomcat/8.5.23
2021-09-19 19:12:18,462 INFO  [localhost-startStop-1] - [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2021-09-19 19:12:18,462 INFO  [localhost-startStop-1] - [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 9411 ms
2021-09-19 19:12:18,929 INFO  [localhost-startStop-1] - [org.springframework.boot.web.servlet.ServletRegistrationBean] - Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2021-09-19 19:12:18,930 INFO  [localhost-startStop-1] - [org.springframework.boot.web.servlet.ServletRegistrationBean] - Mapping servlet: 'dispatcherServlet' to [/]
2021-09-19 19:12:18,934 INFO  [localhost-startStop-1] - [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'metricsFilter' to: [/*]
2021-09-19 19:12:18,934 INFO  [localhost-startStop-1] - [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2021-09-19 19:12:18,934 INFO  [localhost-startStop-1] - [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-09-19 19:12:18,934 INFO  [localhost-startStop-1] - [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-09-19 19:12:18,934 INFO  [localhost-startStop-1] - [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2021-09-19 19:12:18,934 INFO  [localhost-startStop-1] - [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2021-09-19 19:12:18,934 INFO  [localhost-startStop-1] - [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'applicationContextIdFilter' to: [/*]
2021-09-19 19:12:19,004 INFO  [main] - [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@ef718de: startup date [Sun Sep 19 19:12:19 CST 2021]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@163d04ff
2021-09-19 19:12:19,047 INFO  [main] - [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2021-09-19 19:12:20,195 INFO  [main] - [org.springframework.ui.freemarker.SpringTemplateLoader] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@163d04ff: startup date [Sun Sep 19 19:12:09 CST 2021]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@757acd7b] and template loader path [classpath:/templates/]
2021-09-19 19:12:20,196 INFO  [main] - [org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-09-19 19:12:20,262 INFO  [main] - [org.springframework.transaction.jta.JtaTransactionManager] - Using JTA UserTransaction: org.bytesoft.bytetcc.UserCompensableImpl@6af65f29
2021-09-19 19:12:20,262 INFO  [main] - [org.springframework.transaction.jta.JtaTransactionManager] - Using JTA TransactionManager: org.bytesoft.bytetcc.TransactionManagerImpl@7b18658a
2021-09-19 19:12:20,323 WARN  [main] - [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2021-09-19 19:12:20,323 INFO  [main] - [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-19 19:12:20,328 INFO  [main] - [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4def7d36
2021-09-19 19:12:20,581 WARN  [main] - [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2021-09-19 19:12:20,581 INFO  [main] - [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-09-19 19:12:20,802 INFO  [main] - [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@163d04ff: startup date [Sun Sep 19 19:12:09 CST 2021]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@757acd7b
2021-09-19 19:12:20,919 INFO  [main] - [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/simplified/transfer],methods=[POST]}" onto public void com.bytesvc.consumer.controller.SimplifiedController.transfer(java.lang.String,java.lang.String,double)
2021-09-19 19:12:20,921 INFO  [main] - [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/transfer],methods=[POST]}" onto public void com.bytesvc.consumer.controller.TransferController.transfer(java.lang.String,java.lang.String,double)
2021-09-19 19:12:20,921 INFO  [main] - [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/getAmount],methods=[POST]}" onto public java.lang.Double com.bytesvc.consumer.controller.TransferController.getAmount(java.lang.String)
2021-09-19 19:12:20,922 INFO  [main] - [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2021-09-19 19:12:20,922 INFO  [main] - [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2021-09-19 19:12:20,924 INFO  [main] - [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/org/bytesoft/bytetcc/prepare/{xid}],methods=[POST]}" onto public int org.bytesoft.bytetcc.supports.springcloud.controller.CompensableCoordinatorController.prepare(java.lang.String,javax.servlet.http.HttpServletResponse)
2021-09-19 19:12:20,924 INFO  [main] - [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/org/bytesoft/bytetcc/commit/{xid}/{opc}],methods=[POST]}" onto public void org.bytesoft.bytetcc.supports.springcloud.controller.CompensableCoordinatorController.commit(java.lang.String,boolean,javax.servlet.http.HttpServletResponse)
2021-09-19 19:12:20,925 INFO  [main] - [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/org/bytesoft/bytetcc/rollback/{xid}],methods=[POST]}" onto public void org.bytesoft.bytetcc.supports.springcloud.controller.CompensableCoordinatorController.rollback(java.lang.String,javax.servlet.http.HttpServletResponse)
2021-09-19 19:12:20,925 INFO  [main] - [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/org/bytesoft/bytetcc/forget/{xid}],methods=[POST]}" onto public void org.bytesoft.bytetcc.supports.springcloud.controller.CompensableCoordinatorController.forget(java.lang.String,javax.servlet.http.HttpServletResponse)
2021-09-19 19:12:20,925 INFO  [main] - [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/org/bytesoft/bytetcc/recover/{flag}],methods=[GET]}" onto public javax.transaction.xa.Xid[] org.bytesoft.bytetcc.supports.springcloud.controller.CompensableCoordinatorController.recover(int,javax.servlet.http.HttpServletResponse)
2021-09-19 19:12:20,930 INFO  [main] - [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-09-19 19:12:20,931 INFO  [main] - [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-09-19 19:12:21,012 INFO  [main] - [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-09-19 19:12:21,012 INFO  [main] - [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-09-19 19:12:21,087 INFO  [main] - [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-09-19 19:12:24,450 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2021-09-19 19:12:24,450 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2021-09-19 19:12:24,451 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2021-09-19 19:12:24,452 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2021-09-19 19:12:24,452 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2021-09-19 19:12:24,454 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2021-09-19 19:12:24,456 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2021-09-19 19:12:24,457 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2021-09-19 19:12:24,457 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2021-09-19 19:12:24,459 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2021-09-19 19:12:24,460 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2021-09-19 19:12:24,462 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2021-09-19 19:12:24,463 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2021-09-19 19:12:24,464 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2021-09-19 19:12:24,465 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2021-09-19 19:12:24,466 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2021-09-19 19:12:24,466 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2021-09-19 19:12:24,467 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2021-09-19 19:12:24,467 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2021-09-19 19:12:24,467 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2021-09-19 19:12:24,467 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2021-09-19 19:12:24,468 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2021-09-19 19:12:24,468 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2021-09-19 19:12:24,469 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2021-09-19 19:12:24,469 INFO  [main] - [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2021-09-19 19:12:24,928 WARN  [main] - [org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
2021-09-19 19:12:24,994 INFO  [main] - [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2021-09-19 19:12:25,007 INFO  [main] - [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2021-09-19 19:12:25,007 INFO  [main] - [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2021-09-19 19:12:25,008 INFO  [main] - [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2021-09-19 19:12:25,008 INFO  [main] - [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2021-09-19 19:12:25,009 INFO  [main] - [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2021-09-19 19:12:25,011 INFO  [main] - [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2021-09-19 19:12:25,025 INFO  [main] - [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2021-09-19 19:12:25,031 INFO  [main] - [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2021-09-19 19:12:25,046 INFO  [main] - [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=163d04ff,type=ConfigurationPropertiesRebinder]
2021-09-19 19:12:25,052 INFO  [main] - [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2021-09-19 19:12:25,056 INFO  [main] - [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter] - Registering beans for JMX exposure on startup
2021-09-19 19:12:25,070 INFO  [main] - [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2021-09-19 19:12:25,077 INFO  [main] - [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2021-09-19 19:12:25,115 INFO  [main] - [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2021-09-19 19:12:25,189 INFO  [main] - [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2021-09-19 19:12:25,190 INFO  [main] - [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2021-09-19 19:12:25,325 INFO  [main] - [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2021-09-19 19:12:25,325 INFO  [main] - [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2021-09-19 19:12:25,527 INFO  [main] - [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2021-09-19 19:12:26,016 INFO  [main] - [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2021-09-19 19:12:26,016 INFO  [main] - [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2021-09-19 19:12:26,016 INFO  [main] - [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2021-09-19 19:12:26,016 INFO  [main] - [com.netflix.discovery.DiscoveryClient] - Application is null : false
2021-09-19 19:12:26,016 INFO  [main] - [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2021-09-19 19:12:26,017 INFO  [main] - [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2021-09-19 19:12:26,017 INFO  [main] - [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2021-09-19 19:12:26,311 INFO  [main] - [com.netflix.discovery.DiscoveryClient] - The response status is 200
2021-09-19 19:12:26,314 INFO  [main] - [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2021-09-19 19:12:26,321 INFO  [main] - [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-09-19 19:12:26,325 INFO  [main] - [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1632049946325 with initial instances count: 2
2021-09-19 19:12:26,347 INFO  [main] - [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application springcloud-sample-consumer with eureka with status UP
2021-09-19 19:12:26,347 INFO  [main] - [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1632049946347, current=UP, previous=STARTING]
2021-09-19 19:12:26,350 INFO  [DiscoveryClient-InstanceInfoReplicator-0] - [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SPRINGCLOUD-SAMPLE-CONSUMER/jp:springcloud-sample-consumer:7080: registering service...
2021-09-19 19:12:26,358 INFO  [main] - [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2021-09-19 19:12:26,369 INFO  [main] - [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2021-09-19 19:12:26,387 INFO  [main] - [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2021-09-19 19:12:26,391 INFO  [main] - [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2021-09-19 19:12:26,411 INFO  [main] - [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2021-09-19 19:12:26,416 INFO  [main] - [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2021-09-19 19:12:26,422 INFO  [main] - [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2021-09-19 19:12:26,426 INFO  [main] - [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2021-09-19 19:12:26,435 INFO  [DiscoveryClient-InstanceInfoReplicator-0] - [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SPRINGCLOUD-SAMPLE-CONSUMER/jp:springcloud-sample-consumer:7080 - registration status: 204
2021-09-19 19:12:26,440 INFO  [main] - [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2021-09-19 19:12:26,461 INFO  [main] - [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2021-09-19 19:12:26,468 INFO  [main] - [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2021-09-19 19:12:26,480 INFO  [main] - [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2021-09-19 19:12:26,483 INFO  [main] - [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2021-09-19 19:12:26,489 INFO  [main] - [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2021-09-19 19:12:26,493 INFO  [main] - [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2021-09-19 19:12:26,505 INFO  [main] - [org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration] - Starting poller
2021-09-19 19:12:26,562 INFO  [main] - [org.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-7080"]
2021-09-19 19:12:26,593 INFO  [main] - [org.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-7080"]
2021-09-19 19:12:26,596 INFO  [main] - [org.apache.tomcat.util.net.NioSelectorPool] - Using a shared selector for servlet write/read
2021-09-19 19:12:26,657 INFO  [main] - [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer] - Tomcat started on port(s): 7080 (http)
2021-09-19 19:12:26,658 INFO  [main] - [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 7080
2021-09-19 19:12:26,667 INFO  [main] - [com.bytesvc.consumer.main.SampleConsumerMain] - Started SampleConsumerMain in 23.668 seconds (JVM running for 27.457)
2021-09-19 19:12:29,609 WARN  [RMI TCP Connection(4)-192.168.1.106] - [org.springframework.boot.actuate.health.DataSourceHealthIndicator] - Health check failed
org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Cannot create PoolableConnectionFactory (Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:342)
	at org.springframework.boot.actuate.health.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:123)
	at org.springframework.boot.actuate.health.DataSourceHealthIndicator.doDataSourceHealthCheck(DataSourceHealthIndicator.java:105)
	at org.springframework.boot.actuate.health.DataSourceHealthIndicator.doHealthCheck(DataSourceHealthIndicator.java:100)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:43)
	at org.springframework.boot.actuate.health.CompositeHealthIndicator.health(CompositeHealthIndicator.java:68)
	at org.springframework.boot.actuate.endpoint.HealthEndpoint.invoke(HealthEndpoint.java:85)
	at org.springframework.boot.actuate.endpoint.HealthEndpoint.invoke(HealthEndpoint.java:35)
	at org.springframework.boot.actuate.endpoint.jmx.DataEndpointMBean.getData(DataEndpointMBean.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)
	at sun.reflect.GeneratedMethodAccessor104.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:275)
	at javax.management.modelmbean.RequiredModelMBean$4.run(RequiredModelMBean.java:1252)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
	at javax.management.modelmbean.RequiredModelMBean.invokeMethod(RequiredModelMBean.java:1246)
	at javax.management.modelmbean.RequiredModelMBean.invoke(RequiredModelMBean.java:1085)
	at org.springframework.jmx.export.SpringModelMBean.invoke(SpringModelMBean.java:90)
	at javax.management.modelmbean.RequiredModelMBean.getAttribute(RequiredModelMBean.java:1562)
	at org.springframework.jmx.export.SpringModelMBean.getAttribute(SpringModelMBean.java:109)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:647)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:678)
	at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1443)
	at javax.management.remote.rmi.RMIConnectionImpl.access$300(RMIConnectionImpl.java:76)
	at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1307)
	at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1399)
	at javax.management.remote.rmi.RMIConnectionImpl.getAttribute(RMIConnectionImpl.java:637)
	at sun.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$254(TCPTransport.java:683)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$1/1846839920.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLException: Cannot create PoolableConnectionFactory (Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.)
	at org.apache.commons.dbcp2.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:2294)
	at org.apache.commons.dbcp2.BasicDataSource.createDataSource(BasicDataSource.java:2039)
	at org.apache.commons.dbcp2.BasicDataSource.getConnection(BasicDataSource.java:1533)
	at org.bytesoft.bytejta.supports.jdbc.LocalXADataSource.getConnection(LocalXADataSource.java:49)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	... 50 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:989)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:341)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2189)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2222)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2017)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:779)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:389)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at org.apache.commons.dbcp2.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:39)
	at org.apache.commons.dbcp2.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:256)
	at org.apache.commons.dbcp2.BasicDataSource.validateConnectionFactory(BasicDataSource.java:2304)
	at org.apache.commons.dbcp2.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:2290)
	... 55 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 71 common frames omitted
2021-09-19 19:12:29,615 INFO  [RMI TCP Connection(4)-192.168.1.106] - [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] - Fetching config from server at: http://localhost:8888
2021-09-19 19:12:31,660 WARN  [RMI TCP Connection(4)-192.168.1.106] - [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/springcloud-sample-consumer/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2021-09-19 19:12:53,341 INFO  [http-nio-7080-exec-10] - [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-09-19 19:12:53,343 INFO  [http-nio-7080-exec-10] - [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2021-09-19 19:12:53,381 INFO  [http-nio-7080-exec-10] - [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
2021-09-19 19:12:53,447 INFO  [http-nio-7080-exec-10] - [org.bytesoft.bytetcc.CompensableTransactionImpl] - e4b318cab65b0000017bfdc248be00015fd2435e| register compensable service: e4b318cab65b0000017bfdc248be00015fd2435e.
2021-09-19 19:12:53,581 INFO  [http-nio-7080-exec-10] - [org.bytesoft.bytetcc.CompensableManagerImpl] - e4b318cab65b0000017bfdc248be00015fd2435e| compensable transaction begin!
2021-09-19 19:12:53,589 INFO  [http-nio-7080-exec-10] - [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7fd0fd83: startup date [Sun Sep 19 19:12:53 CST 2021]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@163d04ff
2021-09-19 19:12:53,651 INFO  [http-nio-7080-exec-10] - [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2021-09-19 19:12:53,963 INFO  [http-nio-7080-exec-10] - [com.netflix.util.concurrent.ShutdownEnabledTimer] - Shutdown hook installed for: NFLoadBalancer-PingTimer-SPRINGCLOUD-SAMPLE-PROVIDER
2021-09-19 19:12:53,988 INFO  [http-nio-7080-exec-10] - [com.netflix.loadbalancer.BaseLoadBalancer] - Client: SPRINGCLOUD-SAMPLE-PROVIDER instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=SPRINGCLOUD-SAMPLE-PROVIDER,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2021-09-19 19:12:53,997 INFO  [http-nio-7080-exec-10] - [com.netflix.loadbalancer.DynamicServerListLoadBalancer] - Using serverListUpdater PollingServerListUpdater
2021-09-19 19:12:54,027 INFO  [http-nio-7080-exec-10] - [com.netflix.loadbalancer.DynamicServerListLoadBalancer] - DynamicServerListLoadBalancer for client SPRINGCLOUD-SAMPLE-PROVIDER initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=SPRINGCLOUD-SAMPLE-PROVIDER,current list of Servers=[localhost:7070],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:7070;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@41dd1e2c
2021-09-19 19:12:54,142 WARN  [http-nio-7080-exec-10] - [org.bytesoft.bytetcc.supports.springcloud.feign.CompensableFeignHandler] - There is no suitable server: expect= [], actual= [localhost:7070]!
2021-09-19 19:12:54,147 INFO  [http-nio-7080-exec-10] - [org.bytesoft.bytetcc.CompensableTransactionImpl] - e4b318cab65b0000017bfdc248be00015fd2435e| enlist remote resource: 192.168.1.106:SPRINGCLOUD-SAMPLE-PROVIDER:7070.
2021-09-19 19:12:56,534 INFO  [http-nio-7080-exec-10] - [org.bytesoft.bytejta.TransactionImpl] - [e4b318cab65b0000017bfdc248be00015fd2435e] rollback-transaction start
2021-09-19 19:12:56,536 INFO  [http-nio-7080-exec-10] - [org.bytesoft.bytejta.TransactionImpl] - [e4b318cab65b0000017bfdc248be00015fd2435e] rollback-transaction complete successfully
2021-09-19 19:12:56,536 INFO  [http-nio-7080-exec-10] - [org.bytesoft.bytetcc.CompensableTransactionImpl] - e4b318cab65b0000017bfdc248be00015fd2435e| The operation in try phase is rolled back, so the cancel operation is ignored, compensable service: e4b318cab65b0000017bfdc248be00015fd2435e.
2021-09-19 19:12:56,538 WARN  [http-nio-7080-exec-10] - [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] - Failed to evaluate Jackson deserialization for type [[simple type, class void]]: com.fasterxml.jackson.databind.JsonMappingException: Internal error: can't find deserializer for void
2021-09-19 19:12:57,944 INFO  [http-nio-7080-exec-10] - [org.bytesoft.bytetcc.CompensableTransactionImpl] - e4b318cab65b0000017bfdc248be00015fd2435e| cancel remote branch: 192.168.1.106:SPRINGCLOUD-SAMPLE-PROVIDER:7070
2021-09-19 19:12:57,945 INFO  [http-nio-7080-exec-10] - [org.bytesoft.bytetcc.CompensableTransactionImpl] - e4b318cab65b0000017bfdc248be00015fd2435e| compensable transaction rolled back!
2021-09-19 19:12:57,945 INFO  [http-nio-7080-exec-10] - [org.bytesoft.bytetcc.CompensableTransactionImpl] - e4b318cab65b0000017bfdc248be00015fd2435e| forget transaction.
2021-09-19 19:12:57,962 ERROR [http-nio-7080-exec-10] - [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.FeignException: status 500 reading IAccountService#decreaseAmount(String,double); content:
{"timestamp":1632049976497,"status":500,"error":"Internal Server Error","exception":"java.lang.reflect.UndeclaredThrowableException","message":"No message available","path":"/decrease"}] with root cause
feign.FeignException: status 500 reading IAccountService#decreaseAmount(String,double); content:
{"timestamp":1632049976497,"status":500,"error":"Internal Server Error","exception":"java.lang.reflect.UndeclaredThrowableException","message":"No message available","path":"/decrease"}
	at feign.FeignException.errorStatus(FeignException.java:62)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:91)
	at org.bytesoft.bytetcc.supports.springcloud.feign.CompensableFeignErrorDecoder.decode(CompensableFeignErrorDecoder.java:119)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:138)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at org.bytesoft.bytetcc.supports.springcloud.feign.CompensableFeignHandler.invoke(CompensableFeignHandler.java:161)
	at com.sun.proxy.$Proxy117.decreaseAmount(Unknown Source)
	at com.bytesvc.consumer.controller.SimplifiedController.transfer(SimplifiedController.java:30)
	at com.bytesvc.consumer.controller.SimplifiedController$$FastClassBySpringCGLIB$$1c2117f1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.bytesoft.bytetcc.supports.spring.CompensableMethodInterceptor.execute(CompensableMethodInterceptor.java:194)
	at org.bytesoft.bytetcc.supports.spring.CompensableMethodInterceptor.invoke(CompensableMethodInterceptor.java:103)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bytesvc.consumer.controller.SimplifiedController$$EnhancerBySpringCGLIB$$9c1915dd.transfer(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
